% release(tx);

%%% ---------------------------------------------------
% Read voice message

% If you want symbols (0, 3)
[voiceMessage, fs] = setupVoiceFromFile("VoiceFiles/stry(1).wav");

% If you want bits
% [voiceMessageBits, fs] = setupVoiceFromFileBits("VoiceFiles/stry(1).wav");
% voiceMessageBitsMod = pskmod(voiceMessageBits, M, pi/M, "gray", InputType = 'bit');

%%% ---------------------------------------------------

%%% ---------------------------------------------------
% Partition the voice signal

partitions = 29;
voiceMessageCut = voiceMessage(1:29000);

messages = reshape(voiceMessageCut, [1000, 29]);

%%% ---------------------------------------------------

%%% ---------------------------------------------------
rng(630);

init = [zeros(1:200); preamble; header; message; filler(201:end)];
initMod = pskmod(init, M, pi/M, "gray");
txSignal = upfirdn(, rrcFilter, sps, 1);
tx(txSignal);

% Iterate through and send all messages
for i = 1:size(messages, 2)
    % i = 23;

    message = messages(:, i);
    header = headers(:, i);

    filler = randi([0 M-1], fillerSize*2, 1);

    bitStream = [filler(1:200); preamble; header; message; filler(201:end)];
    bitStreamMod = pskmod(bitStream, M, pi/M, "gray");

    txSignal = upfirdn(bitStreamMod, rrcFilter, sps, 1);

    % transmitRepeat(tx, txSignal);
    tx();

    fprintf("%s %i \n", "Transmitting: ", i);

    % pause(1);
end
release(tx);

%%% ---------------------------------------------------

%%% ---------------------------------------------------

% Continously send one signal
i = 15;

message = messages(:, i);
header = headers(:, i);

filler = randi([0 M-1], fillerSize*2, 1);

bitStream = [filler(1:200); preamble; header; message; filler(201:end)];
bitStreamMod = pskmod(bitStream, M, pi/M, "gray");

txSignal = upfirdn(bitStreamMod, rrcFilter, sps, 1);

% transmitRepeat(tx, txSignal);
tx(txSignal);
release(tx);

%%% ---------------------------------------------------
